/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* next;
    Node* random;
    
    Node(int _val) {
        val = _val;
        next = NULL;
        random = NULL;
    }
};
*/

class Solution {
public:
    Node* copyRandomList(Node* head) {
        if(head==NULL) return NULL;
        Node *node = head, *head2, *dummy;
        do{
            Node *temp = new Node(node->val);
            temp->next = node->next;
            node->next = temp;
            temp->random = NULL;
            node = temp->next;
        }while(node);
        node = head;
        while(node){
            node->next->random = node->random == NULL ? NULL : node->random->next;
            node = node->next->next;
        }
        node = head;
        head2 = head->next;
        dummy = head->next;
        while(node->next){
            node->next = dummy->next;
            node = node->next;
            if(node == NULL) break;
            dummy->next = node->next;
            dummy = dummy->next;
        }
        return head2;
    }
};
