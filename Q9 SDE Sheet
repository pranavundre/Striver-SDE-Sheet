class Solution {
public:
    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {
        int k=(m+n)-1;
        int i=m-1,j=n-1;
        while(i>=0 && j>=0){
            if(nums1[i]>=nums2[j])
                nums1[k--]=nums1[i--];
            else
                nums1[k--]=nums2[j--];
        }
        while(j>=0) nums1[k--]=nums2[j--];
    }
};

// By GAP Algorithm

//      int gap = m+n;
//      int i = 0;
//      while(i < n){
//          nums1[m+i] = nums2[i];
//          i++;
//      }
//      do{
//          gap = (gap+1)/2;
//          i = 0;
//          while(i+gap < m+n){
//              if(nums1[i] > nums1[gap+i]) swap(nums1[i], nums1[gap+i]);
//              i++;
//          }
//      }while(gap != 1);
