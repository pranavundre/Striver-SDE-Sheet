class Solution{
    public:
    void paths(vector<vector<int>> m, vector<string>& ds, int dr[], int dc[], string temp, int r, int c){
        if(r == m.size()-1 && c == m.size()-1){
            ds.push_back(temp);
            return;
        }
        string dir = "DLRU";
        for(int i = 0; i < 4; i++){
            int nr = r + dr[i];
            int nc = c + dc[i];
            if(nr>=0 && nc>=0 && nr<m.size() && nc<m.size() && m[nr][nc] == 1 && temp[temp.size()-1] != dir[3-i]){
                m[nr][nc] = -1;
                paths(m, ds, dr, dc, temp + dir[i], nr, nc);
                m[nr][nc] = 1;
            }
        }
    }
    
    vector<string> findPath(vector<vector<int>> &m, int n) {
        // Your code goes here
        vector<string> ds;
        if(m[0][0] == 0) return ds;
        int dr[] = {1,0,0,-1};
        int dc[] = {0,-1,1,0};
        string temp = "";
        paths(m, ds, dr, dc, temp, 0, 0);
        return ds;
    }
};
